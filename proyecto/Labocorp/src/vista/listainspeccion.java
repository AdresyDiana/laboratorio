/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import java.sql.Date;
import java.sql.Time;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.conexion;
import modelo.instalaciones;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author GLOBAL
 */
public class listainspeccion extends javax.swing.JInternalFrame {

    SimpleDateFormat formato = new SimpleDateFormat("MM-yy");
    Date fecha;
    Time TXT1;
    String TXT3;
    String TXT2;

    /**
     * Creates new form listainspeccion
     */
    public listainspeccion() {
        initComponents();
        llenarTabla();
        limpiarformulario();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void limpiarformulario() {
        report.setEnabled(false);
        jTextField1.setText("Escriba el área");
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        panelImage1 = new org.edisoncor.gui.panel.PanelImage();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        report = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        buscar = new javax.swing.JButton();
        limpiar = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Area", "Idusuario", "Fecha", "Hora", "Observacion", "Resultado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable2MousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setTitle("LISTADO INSPECCIÓN");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameIconified(evt);
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        panelImage1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/reg.jpg"))); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Área", "Id Usuario", "Fecha", "Hora", "Observación", "Resultado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        report.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/portapapeles-icono-9080-32.png"))); // NOI18N
        report.setToolTipText("Generar Reporte");
        report.setContentAreaFilled(false);
        report.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportActionPerformed(evt);
            }
        });

        jDateChooser1.setDateFormatString("yyyy-MM");

        buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/zoom-icono-9136-32.png"))); // NOI18N
        buscar.setToolTipText("Buscar");
        buscar.setContentAreaFilled(false);
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        limpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/vacio-icono-5458-32.png"))); // NOI18N
        limpiar.setToolTipText(" Limpiar");
        limpiar.setContentAreaFilled(false);
        limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarActionPerformed(evt);
            }
        });

        jTextField1.setText("Ingrese el area");
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1FocusLost(evt);
            }
        });

        javax.swing.GroupLayout panelImage1Layout = new javax.swing.GroupLayout(panelImage1);
        panelImage1.setLayout(panelImage1Layout);
        panelImage1Layout.setHorizontalGroup(
            panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelImage1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelImage1Layout.createSequentialGroup()
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buscar)
                        .addGap(18, 18, 18)
                        .addComponent(report)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(limpiar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        panelImage1Layout.setVerticalGroup(
            panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelImage1Layout.createSequentialGroup()
                .addGroup(panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelImage1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(report)
                            .addComponent(buscar)
                            .addComponent(limpiar)))
                    .addGroup(panelImage1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelImage1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelImage1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void reportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportActionPerformed
        // TODO add your handling code here:
        JasperReport jrReporte = null;
        try {
            jrReporte = (JasperReport) JRLoader.loadObject(getClass().getClassLoader().getResource("reportes/insta.jasper"));
            Map params = new HashMap();
            params.put("parameter1", fecha);
            params.put("parameter2", TXT1);
            params.put("toma", TXT2);
            params.put("id", TXT3);
            params.put("rutasub", System.getProperty("user.dir"));
            JasperPrint jpReporte = JasperFillManager.fillReport(jrReporte, params, conexion.connection);
            JasperViewer jReporteViewer = new JasperViewer(jpReporte, false);
            jReporteViewer.setVisible(true);
        } catch (JRException e) {
            System.err.println("Hubo un problema con el jasper " + e);
        }
        limpiarformulario();

    }//GEN-LAST:event_reportActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        // TODO add your handling code here:

        llenartabla2();

    }//GEN-LAST:event_buscarActionPerformed

    private void limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarActionPerformed
        // TODO add your handling code here:
        llenarTabla();
        limpiarformulario();
    }//GEN-LAST:event_limpiarActionPerformed

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
        // TODO add your handling code here:

        int select = jTable1.rowAtPoint(evt.getPoint());
        if (select > -1) {
            fecha = (Date) jTable1.getValueAt(select, 2);
            TXT1 = (Time) jTable1.getValueAt(select, 3);
            TXT2 = (String) jTable1.getValueAt(select, 0);
            TXT3 = (String) jTable1.getValueAt(select, 1);
        }
        report.setEnabled(true);
    }//GEN-LAST:event_jTable1MousePressed

    private void jTable2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable2MousePressed

    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained
        // TODO add your handling code here:
        if (jTextField1.getText().equals("Escriba el área")) {
            jTextField1.setText("");
        }
    }//GEN-LAST:event_jTextField1FocusGained

    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusLost
        // TODO add your handling code here:
        if (jTextField1.getText().equals("")) {
            jTextField1.setText("Escriba el área");
        }
    }//GEN-LAST:event_jTextField1FocusLost

    private void formInternalFrameIconified(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameIconified
        this.toFront();
    }//GEN-LAST:event_formInternalFrameIconified

    public static void llenarTabla() {
        instalaciones unainstalacion = new instalaciones();
        DefaultTableModel tabla = (DefaultTableModel) jTable1.getModel();
        DefaultTableModel tabla2 = (DefaultTableModel) jTable2.getModel();
        Iterator<instalaciones> itEqui = unainstalacion.listar();
        Object[] fila = new Object[jTable1.getColumnCount()];
        Object[] fila2 = new Object[jTable2.getColumnCount()];
        tabla.setRowCount(0);
        tabla2.setRowCount(0);
        while (itEqui.hasNext()) {
            unainstalacion = itEqui.next();
            fila[0] = unainstalacion.getArea();
            fila[1] = unainstalacion.getIdentificacion();
            fila[2] = unainstalacion.getFecharevision();
            fila[3] = unainstalacion.getHoraderevision();
            fila[4] = unainstalacion.getObservacion();
            fila[5] = unainstalacion.getResultadoinspec();
            fila2[0] = unainstalacion.getArea();
            fila2[1] = unainstalacion.getIdentificacion();
            fila2[2] = unainstalacion.getFecharevision();
            fila2[3] = unainstalacion.getHoraderevision();
            fila2[4] = unainstalacion.getObservacion();
            fila2[5] = unainstalacion.getResultadoinspec();
            tabla.addRow(fila);
            tabla2.addRow(fila2);
        }
    }

    public void llenartabla2() {

        if (jTextField1.getText().equals("Escriba el área") || jDateChooser1.getDate() == null || jTextField1.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Debe ingresar los valores de búsqueda");
        } else {
            int c = jTable1.getRowCount();
            DefaultTableModel tabla = (DefaultTableModel) jTable1.getModel();
            Object[] fila = new Object[jTable1.getColumnCount()];
            tabla.setRowCount(0);
            for (int i = 0; i < jTable2.getRowCount(); i++) {
                String f = formato.format(jTable2.getValueAt(i, 2));
                String f2 = formato.format(jDateChooser1.getDate());
                if (f.equals(f2) && jTextField1.getText().equals(jTable2.getValueAt(i, 0))) {
                    fila[0] = jTable2.getValueAt(i, 0);
                    fila[1] = jTable2.getValueAt(i, 1);
                    fila[2] = jTable2.getValueAt(i, 2);
                    fila[3] = jTable2.getValueAt(i, 3);
                    fila[4] = jTable2.getValueAt(i, 4);
                    fila[5] = jTable2.getValueAt(i, 5);
                    tabla.addRow(fila);
                }
            }
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscar;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JTable jTable1;
    public static javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton limpiar;
    private org.edisoncor.gui.panel.PanelImage panelImage1;
    private javax.swing.JButton report;
    // End of variables declaration//GEN-END:variables
}
