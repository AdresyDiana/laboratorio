package vista;

import com.mxrck.autocompleter.TextAutoCompleter;
import com.sun.glass.events.KeyEvent;
import modelo.*;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Andrés Felipe Rincón Sánchez
 */
public class Reactivos extends javax.swing.JInternalFrame {

    String[] titulos = {"N° Registro", "N° Interno", "Reactivo", "CAS", "Marca", "Vencimiento", "Cantidad Actual", "Riesgo", "Mg Comprados"};
    Connection con = conexion.connection;
    DefaultTableModel modelo;
    SimpleDateFormat formato = new SimpleDateFormat("yyyy-dd-MM");
    TextAutoCompleter auto;
    int a, b;

    public Reactivos() {

        initComponents();
        modelo = new DefaultTableModel(null, titulos);
        tablet.setModel(modelo);
        actualizar();
        limpiar();
        completar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        panelImage1 = new org.edisoncor.gui.panel.PanelImage();
        fondo = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        ubicacion = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        envas = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        fechavence = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        lote = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        marfac = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cantidad = new javax.swing.JTextField();
        CAS = new javax.swing.JTextField();
        hojasegur = new javax.swing.JComboBox<>();
        intern = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        nombre_rec = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        analisis_certificado = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        riesgo = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        estadfisico = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        codproduc = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        observ = new javax.swing.JTextArea();
        jLabel35 = new javax.swing.JLabel();
        sus_controla = new javax.swing.JComboBox<>();
        modificar = new javax.swing.JButton();
        buscar = new javax.swing.JButton();
        guardar = new javax.swing.JButton();
        limpiar = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        tablet = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        foto = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        numregisto = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setClosable(true);
        setIconifiable(true);
        setTitle("REACTIVOS");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameIconified(evt);
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        panelImage1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/reg.jpg"))); // NOI18N

        fondo.setOpaque(false);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "REACTIVOS QUIMICOS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 18), new java.awt.Color(102, 102, 102))); // NOI18N
        jPanel5.setOpaque(false);

        jLabel11.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 102, 102));
        jLabel11.setText("Ubicación:");

        jLabel10.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 102, 102));
        jLabel10.setText("Cantidad:");

        envas.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        envas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione...", "Plastico", "Vidrio" }));

        jLabel9.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 102, 102));
        jLabel9.setText("Estado Físico:");

        jLabel8.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 102, 102));
        jLabel8.setText("Fecha de Vencimiento:");

        jLabel7.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("Lote No:");

        jLabel6.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("Marca/Fabricante:");

        cantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cantidadKeyTyped(evt);
            }
        });

        hojasegur.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        hojasegur.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione...", "SI", "No" }));

        intern.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                internKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Codigo Producto:");

        jLabel15.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(102, 102, 102));
        jLabel15.setText("Tiene Hoja de Seguridad:");

        jLabel3.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Nombre Reactivo:");

        analisis_certificado.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        analisis_certificado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione...", "N/A", "Si", "No" }));

        jLabel2.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("N° Interno:");

        jLabel14.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(102, 102, 102));
        jLabel14.setText("Tiene Certificado de Análisis:");

        riesgo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        riesgo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione...", "Moderado", "Tóxico", "Inflamable", "Corrosivo", "Oxidante" }));
        riesgo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                riesgoActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(102, 102, 102));
        jLabel13.setText("Clasificación Riesgo:");

        jLabel12.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(102, 102, 102));
        jLabel12.setText("Envase:");

        jLabel5.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("CAS:");

        jLabel34.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(102, 102, 102));
        jLabel34.setText("Observaciones:");

        observ.setColumns(20);
        observ.setLineWrap(true);
        observ.setRows(5);
        jScrollPane9.setViewportView(observ);

        jLabel35.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(102, 102, 102));
        jLabel35.setText("Sustancia Controlada:");

        sus_controla.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        sus_controla.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione...", "Si", "No" }));

        modificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/editar-usuario-icono-9786-32.png"))); // NOI18N
        modificar.setToolTipText("MODIFICAR");
        modificar.setContentAreaFilled(false);
        modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarActionPerformed(evt);
            }
        });

        buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/zoom-icono-9136-32.png"))); // NOI18N
        buscar.setToolTipText("BUSCAR");
        buscar.setContentAreaFilled(false);
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/editar-archivo-de-salvar-en-disco-icono-4876-32.png"))); // NOI18N
        guardar.setToolTipText("GUARDAR");
        guardar.setContentAreaFilled(false);
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });

        limpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/eliminar-cancelar-icono-4935-16.png"))); // NOI18N
        limpiar.setToolTipText("CANCELAR");
        limpiar.setContentAreaFilled(false);
        limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarActionPerformed(evt);
            }
        });

        tablet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tablet.setEnabled(false);
        tablet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabletMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(tablet);

        jPanel1.setOpaque(false);

        foto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        foto.setToolTipText("");
        foto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(foto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(foto, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel17.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(102, 102, 102));
        jLabel17.setText("Buscar Número de Registro");

        numregisto.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        numregisto.setText("0");
        numregisto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                numregistoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                numregistoFocusLost(evt);
            }
        });
        numregisto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numregistoKeyTyped(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(102, 102, 102));
        jLabel16.setText("Mg");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addGap(97, 97, 97))
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel8)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel35)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(sus_controla, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nombre_rec, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(codproduc, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CAS, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(marfac, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lote, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(intern, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fechavence, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(guardar)
                        .addGap(30, 30, 30)))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel15)
                                .addComponent(jLabel14))
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addComponent(cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ubicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(numregisto, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(riesgo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(analisis_certificado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(hojasegur, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(estadfisico, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(envas, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(modificar)
                        .addGap(40, 40, 40)
                        .addComponent(buscar)
                        .addGap(27, 27, 27)
                        .addComponent(limpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel34)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)))
                .addGap(0, 33, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane7)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(intern, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(nombre_rec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(codproduc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(CAS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(marfac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addGap(11, 11, 11)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8)
                                    .addComponent(fechavence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel35)
                                    .addComponent(sus_controla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(modificar)
                                    .addComponent(guardar)
                                    .addComponent(buscar)
                                    .addComponent(limpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(envas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(jLabel34))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel16))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ubicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(estadfisico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(riesgo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(analisis_certificado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hojasegur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(numregisto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))))
                .addGap(6, 6, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        ubicacion.getAccessibleContext().setAccessibleName("");
        fechavence.getAccessibleContext().setAccessibleName("");
        lote.getAccessibleContext().setAccessibleName("");
        marfac.getAccessibleContext().setAccessibleName("");
        CAS.getAccessibleContext().setAccessibleName("");
        intern.getAccessibleContext().setAccessibleName("");
        nombre_rec.getAccessibleContext().setAccessibleName("");
        estadfisico.getAccessibleContext().setAccessibleName("");
        codproduc.getAccessibleContext().setAccessibleName("");
        sus_controla.getAccessibleContext().setAccessibleName("");
        numregisto.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout fondoLayout = new javax.swing.GroupLayout(fondo);
        fondo.setLayout(fondoLayout);
        fondoLayout.setHorizontalGroup(
            fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fondoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        fondoLayout.setVerticalGroup(
            fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fondoLayout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelImage1Layout = new javax.swing.GroupLayout(panelImage1);
        panelImage1.setLayout(panelImage1Layout);
        panelImage1Layout.setHorizontalGroup(
            panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelImage1Layout.createSequentialGroup()
                .addComponent(fondo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panelImage1Layout.setVerticalGroup(
            panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fondo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelImage1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelImage1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        if (this.observ.getText().equals("")) {
            this.observ.setText("Campo Vacío");
        }
        validar();
        if (a >= 10) {
            JOptionPane.showMessageDialog(null, "NÚMERO DE REGISTRO EXCEDIDOS \n FAVOR REVISAR SI HAY REACTIVOS \n VENCIDOS O VACÍOS Y CAMBIARLOS", "ALERTA", JOptionPane.ERROR_MESSAGE);
        } else {
            String lola = "";
            if (this.intern.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Ingrese un número interno");
            } else if (this.nombre_rec.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Ingrese un nombre al reactivo");
            } else if (this.codproduc.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Ingrese un código de producto");
            } else if (this.CAS.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Ingrese la cas del producto");
            } else if (this.marfac.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Ingrese la marca del producto");
            } else if (this.lote.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Ingrese el lote");
            } else if (this.envas.getSelectedItem().equals("Seleccione...")) {
                JOptionPane.showMessageDialog(null, "Ingrese el envase");
            } else if (this.cantidad.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Ingrese la cantidad");
            } else if (this.estadfisico.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Ingrese el estado físico");
            } else if (this.riesgo.getSelectedItem().equals("Seleccione...")) {
                JOptionPane.showMessageDialog(null, "Ingrese el riesgo");
            } else {
                try {
                    String num_interno = this.intern.getText();
                    String nom_react = this.nombre_rec.getText();
                    String cod_product = this.codproduc.getText();
                    String cas = this.CAS.getText();
                    String marca = this.marfac.getText();
                    String lote = this.lote.getText();
                    java.util.Date fecha = this.fechavence.getDate();
                    java.sql.Date fecha_vencimiento = new java.sql.Date(fecha.getTime());
                    String sustancia_controlada = (String) this.sus_controla.getSelectedItem();
                    String envase = (String) this.envas.getSelectedItem();
                    String cantidad = this.cantidad.getText();
                    String ubicaion = this.ubicacion.getText();
                    String estado_fisico = this.estadfisico.getText();
                    String riesgo = (String) this.riesgo.getSelectedItem();
                    String analisis = (String) this.analisis_certificado.getSelectedItem();
                    String hoja_de_vida = (String) this.hojasegur.getSelectedItem();
                    String obs = this.observ.getText();
                    String ident = menu.getIdent();
                    int descu = Integer.parseInt(numregisto.getText());

                    reactivo_C rea = new reactivo_C(num_interno, nom_react, cod_product, cas, marca, lote, fecha_vencimiento, sustancia_controlada, envase, cantidad, ubicaion, estado_fisico, riesgo, analisis, hoja_de_vida, obs, ident, descu);
                    reactivo_DAO dao = new reactivo_DAO();
                    dao.insertar(rea);
                    limpiar();

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Error Al Insertar");
                    System.out.println(e);
                }

            }
        }
        actualizar();
        completar();
    }//GEN-LAST:event_guardarActionPerformed

    private void modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarActionPerformed
        if (this.observ.getText().equals("")) {
            this.observ.setText("Campo Vacío");
        }
        if (this.intern.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese un número interno");
        } else if (this.nombre_rec.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese un nombre al reactivo");
        } else if (this.codproduc.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese un código de producto");
        } else if (this.CAS.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese la cas del producto");
        } else if (this.marfac.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese la marca del producto");
        } else if (this.lote.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese el lote");
        } else if (this.envas.getSelectedItem().equals("Seleccione...")) {
            JOptionPane.showMessageDialog(null, "Ingrese el envase");
        } else if (this.cantidad.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese la cantidad");
        } else if (this.estadfisico.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese el estado físico");
        } else if (this.riesgo.getSelectedItem().equals("Seleccione...")) {
            JOptionPane.showMessageDialog(null, "Ingrese el riesgo");
        } else {
            try {
                String num_interno = this.intern.getText();
                String nom_react = this.nombre_rec.getText();
                String cod_product = this.codproduc.getText();
                String cas = this.CAS.getText();
                String marca = this.marfac.getText();
                String lote = this.lote.getText();
                java.util.Date fecha = this.fechavence.getDate();
                java.sql.Date fecha_vencimiento = new java.sql.Date(fecha.getTime());
                String sustancia_controlada = (String) this.sus_controla.getSelectedItem();
                String envase = (String) this.envas.getSelectedItem();
                String cantidad = this.cantidad.getText();
                String ubicaion = this.ubicacion.getText();
                String estado_fisico = this.estadfisico.getText();
                String riesgo = (String) this.riesgo.getSelectedItem();
                String analisis = (String) this.analisis_certificado.getSelectedItem();
                String hoja_de_vida = (String) this.hojasegur.getSelectedItem();
                String obs = this.observ.getText();
                String ident = menu.getIdent();
                int descu = Integer.parseInt(numregisto.getText());

                reactivo_C rea = new reactivo_C(num_interno, nom_react, cod_product, cas, marca, lote, fecha_vencimiento, sustancia_controlada, envase, cantidad, ubicaion, estado_fisico, riesgo, analisis, hoja_de_vida, obs, ident, descu);
                reactivo_DAO dao = new reactivo_DAO();
                dao.modificar(rea);

                limpiar();
            } catch (Exception e) {
                System.out.println("Error modificar");
                System.out.println(e);
            }
        }

        actualizar();

        completar();
    }//GEN-LAST:event_modificarActionPerformed

    private void limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarActionPerformed
        limpiar();
        actualizar();
    }//GEN-LAST:event_limpiarActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        buscar();
    }//GEN-LAST:event_buscarActionPerformed

    private void tabletMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabletMouseClicked
        int select = tablet.rowAtPoint(evt.getPoint());
        intern.setText(String.valueOf(tablet.getValueAt(select, 1)));
        numregisto.setText(String.valueOf(tablet.getValueAt(select, 0)));
        try {
            String dos = (String) tablet.getValueAt(select, 5);
            fechavence.setDate(formato.parse(dos));
        } catch (Exception e) {
            System.out.println("Error fecha tabla \n " + e);
        }
        buscar();
    }//GEN-LAST:event_tabletMouseClicked

    private void internKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_internKeyReleased
        if ((int) evt.getKeyChar() == KeyEvent.VK_ENTER) {
            buscar2();
            modelo = new DefaultTableModel(null, titulos);
            Object[] dates = new Object[13];

            try {
                Statement st = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
                ResultSet rs = st.executeQuery("SELECT * FROM  reactivos WHERE nomreactivo = '" + this.nombre_rec.getText() + "' ORDER BY num");
                while (rs.next()) {
                    dates[0] = rs.getString("num");
                    dates[1] = rs.getString("interno");
                    dates[2] = rs.getString("nomreactivo");
                    dates[3] = rs.getString("cas");
                    dates[4] = rs.getString("marcafabricante");
                    dates[5] = rs.getString("fechavencimiento");
                    dates[6] = rs.getString("cantidad");
                    dates[7] = rs.getString("clasifriesgo");
                    dates[8] = rs.getString("totalcomprado");

                    modelo.addRow(dates);
                }
                tablet.setModel(modelo);
            } catch (SQLException e) {
                System.out.println("error tabla");
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_internKeyReleased

    private void cantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantidadKeyTyped
        int code = (int) evt.getKeyChar();
        if (code >= 48 && code <= 57 || code == 8) {

        } else {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "Solo Números", "ALERTA", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_cantidadKeyTyped

    private void riesgoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_riesgoActionPerformed
        imagen();
    }//GEN-LAST:event_riesgoActionPerformed

    private void numregistoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numregistoKeyTyped
        int code = (int) evt.getKeyChar();
        if (code >= 48 && code <= 57 || code == 8) {

        } else {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "Solo Números", "ALERTA", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_numregistoKeyTyped

    private void formInternalFrameIconified(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameIconified
        this.toFront();
    }//GEN-LAST:event_formInternalFrameIconified

    private void numregistoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_numregistoFocusGained
        if (this.numregisto.getText().equals("0")) {
            this.numregisto.setText("");
        }
    }//GEN-LAST:event_numregistoFocusGained

    private void numregistoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_numregistoFocusLost
        if (this.numregisto.getText().equals("")) {
            this.numregisto.setText("0");
        }
    }//GEN-LAST:event_numregistoFocusLost

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CAS;
    private javax.swing.JComboBox<String> analisis_certificado;
    private javax.swing.JButton buscar;
    private javax.swing.JTextField cantidad;
    private javax.swing.JTextField codproduc;
    private javax.swing.JComboBox<String> envas;
    private javax.swing.JTextField estadfisico;
    private com.toedter.calendar.JDateChooser fechavence;
    private javax.swing.JPanel fondo;
    private javax.swing.JLabel foto;
    private javax.swing.JButton guardar;
    private javax.swing.JComboBox<String> hojasegur;
    private javax.swing.JTextField intern;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JButton limpiar;
    private javax.swing.JTextField lote;
    private javax.swing.JTextField marfac;
    private javax.swing.JButton modificar;
    private javax.swing.JTextField nombre_rec;
    private javax.swing.JTextField numregisto;
    private javax.swing.JTextArea observ;
    private org.edisoncor.gui.panel.PanelImage panelImage1;
    private javax.swing.JComboBox<String> riesgo;
    private javax.swing.JComboBox<String> sus_controla;
    private javax.swing.JTable tablet;
    private javax.swing.JTextField ubicacion;
    // End of variables declaration//GEN-END:variables

    public void actualizar() {
        modelo = new DefaultTableModel(null, titulos);
        Object[] dates = new Object[13];

        try {
            Statement st = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            ResultSet rs = st.executeQuery("SELECT * FROM  reactivos ORDER BY num");
            while (rs.next()) {
                dates[0] = rs.getString("num");
                dates[1] = rs.getString("interno");
                dates[2] = rs.getString("nomreactivo");
                dates[3] = rs.getString("cas");
                dates[4] = rs.getString("marcafabricante");
                dates[5] = formato.format(rs.getDate("fechavencimiento"));
                dates[6] = rs.getString("cantidad");
                dates[7] = rs.getString("clasifriesgo");
                dates[8] = rs.getString("totalcomprado");

                modelo.addRow(dates);
            }
            tablet.setModel(modelo);
        } catch (SQLException e) {
            System.out.println("error tabla");
            System.out.println(e);
        }
    }

    void limpiar() {
        String rols = menu.getRol();
        if (rols.equals("Director técnico")) {
            guardar.setEnabled(false);
            modificar.setEnabled(false);
        } else if (rols.equals("Líder de calidad")) {
            guardar.setEnabled(true);
            modificar.setEnabled(false);
        } else if (rols.equals("Analista")) {
            guardar.setEnabled(true);
            modificar.setEnabled(false);
        } else if (rols.equals("Técnico")) {
            guardar.setEnabled(false);
            modificar.setEnabled(false);
        } else {
            guardar.setEnabled(false);
            modificar.setEnabled(false);
        }
        intern.enable(true);
        Date fechaa = new Date();
        this.fechavence.setDate(fechaa);
        numregisto.enable(true);
        numregisto.setText("0");
        intern.setText("");
        nombre_rec.setText("");
        codproduc.setText("");
        CAS.setText("");
        marfac.setText("");
        lote.setText("");
        envas.setSelectedItem("Seleccione...");
        cantidad.setText("");
        ubicacion.setText("");
        estadfisico.setText("");
        riesgo.setSelectedItem("Seleccione...");
        analisis_certificado.setSelectedItem("Seleccione...");
        hojasegur.setSelectedItem("Seleccione...");
        sus_controla.setSelectedItem("Seleccione...");
        observ.setText("");
        imagen();

    }

    public void buscar() {
        validar();
        if (this.numregisto.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese el Número de Registro");
        } else {

            guardar.setEnabled(false);
            modificar.setEnabled(true);
            numregisto.enable(false);
            intern.enable(false);
            try {
                String num_interno = this.intern.getText();
                String nom_react = this.nombre_rec.getText();
                String cod_product = this.codproduc.getText();
                String cas = this.CAS.getText();
                String marca = this.marfac.getText();
                String lote = this.lote.getText();
                java.util.Date fecha = this.fechavence.getDate();
                java.sql.Date fecha_vencimiento = new java.sql.Date(fecha.getTime());
                String sustancia_controlada = (String) this.sus_controla.getSelectedItem();
                String envase = (String) this.envas.getSelectedItem();
                String cantidad = this.cantidad.getText();
                String ubicaion = this.ubicacion.getText();
                String estado_fisico = this.estadfisico.getText();
                String riesgo = (String) this.riesgo.getSelectedItem();
                String analisis = (String) this.analisis_certificado.getSelectedItem();
                String hoja_de_vida = (String) this.hojasegur.getSelectedItem();
                String obs = this.observ.getText();
                String ident = menu.getIdent();
                int descu = Integer.parseInt(numregisto.getText());

                reactivo_C rea = new reactivo_C(num_interno, nom_react, cod_product, cas, marca, lote, fecha_vencimiento, sustancia_controlada, envase, cantidad, ubicaion, estado_fisico, riesgo, analisis, hoja_de_vida, obs, ident, descu);
                reactivo_DAO dao = new reactivo_DAO();
                dao.buscar(rea);

                this.numregisto.setText(String.valueOf(rea.getDescuento()));
                this.nombre_rec.setText(rea.getNom_react());
                this.codproduc.setText(rea.getCod_product());
                this.CAS.setText(rea.getCas());
                this.marfac.setText(rea.getMarca());
                this.lote.setText(rea.getLote());
                try {
                    this.fechavence.setDate(rea.getFecha_vencimiento());
                } catch (Exception e) {
                    System.out.println("Error Fecha");
                    System.out.println(e);
                }
                this.envas.setSelectedItem(rea.getEnvase());
                this.cantidad.setText(rea.getCantidad());
                this.ubicacion.setText(rea.getUbicaion());
                this.estadfisico.setText(rea.getEstado_fisico());
                this.riesgo.setSelectedItem(rea.getRiesgo());
                this.analisis_certificado.setSelectedItem(rea.getAnalisis());
                this.hojasegur.setSelectedItem(rea.getHoja_de_vida());
                this.observ.setText(rea.getObs());
                this.sus_controla.setSelectedItem(rea.getSustancia_controlada());

            } catch (Exception e) {
                System.out.println("Error de busqueda");
                System.out.println(e);
            }
            imagen();
            fecha();
        }
    }

    public void imagen() {
        ImageIcon icon = new ImageIcon(getClass().getResource("/imagenes/virus.png"));
        String rieg = (String) riesgo.getSelectedItem();
        if (rieg.equals("Seleccione...")) {
            foto.setIcon(icon);
        } else if (rieg.equals("Moderado")) {
            ImageIcon ol = new ImageIcon(getClass().getResource("/imagenes/1.png"));
            foto.setIcon(ol);
        } else if (rieg.equals("Tóxico")) {
            ImageIcon ol = new ImageIcon(getClass().getResource("/imagenes/2.png"));
            foto.setIcon(ol);
        } else if (rieg.equals("Inflamable")) {
            ImageIcon ol = new ImageIcon(getClass().getResource("/imagenes/3.png"));
            foto.setIcon(ol);
        } else if (rieg.equals("Corrosivo")) {
            ImageIcon ol = new ImageIcon(getClass().getResource("/imagenes/4.png"));
            foto.setIcon(ol);
        } else if (rieg.equals("Oxidante")) {
            ImageIcon ol = new ImageIcon(getClass().getResource("/imagenes/5.png"));
            foto.setIcon(ol);
        }
    }

    public void fecha() {
        SimpleDateFormat año = new SimpleDateFormat("yyyy");
        SimpleDateFormat mes = new SimpleDateFormat("MM");
        SimpleDateFormat dia = new SimpleDateFormat("dd");

        Date fech = new Date();
        Date fecha = this.fechavence.getDate();

        int año1 = Integer.parseInt(año.format(fech));
        int mes1 = Integer.parseInt(mes.format(fech));
        int dia1 = Integer.parseInt(dia.format(fech));

        int año2 = Integer.parseInt(año.format(fecha));
        int mes2 = Integer.parseInt(mes.format(fecha));
        int dia2 = Integer.parseInt(dia.format(fecha));

        int añototal = 0;
        int mestotal = 0;
        int diatotal = 0;

        if (fech.compareTo(fecha) > 0) {
            System.out.println("Fecha Inferior");
            añototal = año2 - año1;
            mestotal = mes2 - mes1;
            diatotal = dia2 - dia1;
        } else if (fech.compareTo(fecha) < 0) {
            System.out.println("Fecha Superior");
            añototal = año2 - año1;
            mestotal = mes2 - mes1;
            diatotal = dia2 - dia1;
        }

        if (añototal <= 0 && mestotal <= 0 && diatotal <= 0) {
            JOptionPane.showMessageDialog(null, "ESTE REACTIVO YA SE VENCIÓ \n" + "\n FECHA DE VENCIMIENTO \n " + año2 + "-" + mes2 + "-" + dia2, "ALERTA", JOptionPane.ERROR_MESSAGE);
        } else {
            int lol = 0;
            if (añototal == 1) {
                JOptionPane.showMessageDialog(null, "ESTA PRÓXIMO A VENCER EL AÑO \n" + "\n FECHA DE VENCIMIENTO \n " + año2 + "-" + mes2 + "-" + dia2, "ALERTA", JOptionPane.ERROR_MESSAGE);
            } else if (añototal <= 0) {
                JOptionPane.showMessageDialog(null, "YA SE EXPIRÓ EL AÑO \n" + "\n FECHA DE VENCIMIENTO \n " + año2 + "-" + mes2 + "-" + dia2, "ALERTA", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    public void completar() {
        auto = new TextAutoCompleter(intern);
        String sql = "SELECT DISTINCT interno FROM reactivos";
        try {
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                auto.addItem(rs.getString("interno"));
            }
        } catch (Exception e) {
            System.out.println("Error complete");
            System.out.println(e);
        }
    }

    public void buscar2() {
        validar();
        String interno = this.intern.getText();
        try {
            String sql = "SELECT DISTINCT nomreactivo,cas,clasifriesgo,codfabricante,hojaseguridad FROM reactivos WHERE interno = '" + interno + "'";
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                this.nombre_rec.setText(rs.getString("nomreactivo"));
                this.CAS.setText(rs.getString("cas"));
                this.riesgo.setSelectedItem(rs.getString("clasifriesgo"));
                this.codproduc.setText(rs.getString("codfabricante"));
                this.hojasegur.setSelectedItem(rs.getString("hojaseguridad"));
            }
        } catch (Exception e) {
            System.out.println("Error buscar reactivo");
        }
    }

    public void validar() {
        a = 0;

        try {
            String sql = "select count(*) from reactivos where interno ='" + this.intern.getText() + "' or nomreactivo = '"+this.nombre_rec.getText()+"'";
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                a = rs.getInt("count");
            }
        } catch (Exception e) {
            System.out.println(e);
            System.out.println("Error Validar");
        }
    }

}
